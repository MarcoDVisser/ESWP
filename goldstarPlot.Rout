
R version 4.1.2 (2021-11-01) -- "Bird Hippie"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]


   Welcome to R!

   Today is Sat Feb 26 14:47:54 2022 

   Please consider that, I am currently executing the following
%CPU     PID CPUID USER     COMMAND
91.1   55444     0 vissermd /usr/lib/virtualbox/VirtualBoxVM --comment win10 --startvm b5985349-f601-4b00-b415-e3c16ec17237 --no-startvm-errormsgbox
 8.2    1921     6 vissermd polybar -r current
 6.5 1693816    15 vissermd nautilus --new-window
 5.6 1726286     2 vissermd /usr/lib/libreoffice/program/soffice.bin --calc file:///home/vissermd/Dropbox/Backup/Work/git/ESWP/StreakWeeklyWords.csv
 2.6 1780087     7 vissermd /usr/libexec/gnome-terminal-server
 1.7    1883    11 vissermd /home/vissermd/.dropbox-dist/dropbox-lnx.x86_64-142.4.4197/dropbox
 1.6     840     9 message+ /usr/bin/dbus-daemon --system --address=systemd: --nofork --nopidfile --systemd-activation --syslog-only
 1.4    1659    14 vissermd /usr/bin/dbus-daemon --session --address=systemd: --nofork --nopidfile --systemd-activation --syslog-only
 1.3    1896    10 vissermd picom --experimental-backends -b
12.5    1748     6 vissermd /usr/lib/xorg/Xorg vt2 -displayfd 3 -auth /run/user/1000/gdm/Xauthority -background none -noreset -keeptty -verbose 3
 1.0    1976    13 vissermd /usr/bin/python3 /usr/local/bin/zscroll -l 20 --delay 0.1 --scroll-padding  ï¢†  --match-command /home/vissermd/scripts/get_spotify_status.sh --status --match-text Playing --scroll 1 --match-text Paused --scroll 0 --update-check true /home/vissermd/scripts/get_spotify_status.sh
 0.4     855     2 root     /usr/lib/policykit-1/polkitd --no-debug
 0.4 1693937     4 vissermd /usr/libexec/xdg-desktop-portal
 0.4    1653    11 vissermd /usr/bin/pulseaudio --daemonize=no --log-target=journal
 0.3    8780    15 vissermd /usr/lib/virtualbox/VirtualBox

 ____________________________________
/ Q: What do you call a blind        \
| pre-historic animal? A:            |
| Diyathinkhesaurus.                 |
|                                    |
| Q: What do you call a blind        |
| pre-historic animal with a dog? A: |
\ Diyathinkhesaurus Rex.             /
 ------------------------------------
   \
    \
        .--.
       |o_o |
       |:_/ |
      //   \ \
     (|     | )
    /'\_   _/`\
    \___)=(___/

Loading required package: utils
	 No Stoic Fortunes Installed 
> ################################################################################
> ## Writing Streak
> ## Every week when you write
> ## > 300 words = bronze star (write an abstract)
> ## > 1000 words = silver star (write a paper section)
> ## > 2000 words = gold star (write more than one paper section)
> ################################################################################
> 
> ## calender manipulation
> ## ./github_board.py -r ../ESWP -t ./templates/batman.tpl -e marco.d.visser@gmail.com -a center
> 
> setwd("~/Dropbox/Backup/Work/git/ESWP")
> 
> ## 52 weeks of the past year
> today <- format(Sys.time(), "%Y-%m-%d")
> thisweek <- as.numeric(format(Sys.time(), "%V"))
> 
> ## center weeks on this week
> wks <- seq(1,52) 
> weeks <- c(((wks[((thisweek+1):52)])),wks[-((thisweek+1):52)])
> 
> 
> ## a year back
> d <- as.POSIXlt(as.Date(today))
> d$year <- d$year-1
> d <- as.Date(d)
> 
> #layout.show(60)
> 
> ## get streak data
> stk <- read.csv("./StreakWeeklyWords.csv")
> stkDates <- as.Date(stk$Day,format="%d-%m-%Y")
> 
> stk <- stk[stkDates>d,]
> stkDates <- stkDates[stkDates>d]
> stkWeeks <- as.numeric(format(stkDates,format="%V"))
> 
> hits <- star <- numeric(52)
> 
> for(i in stkWeeks){
+     tmp <- sum(stk$words[stkWeeks==i])
+ 
+     if(tmp>300){
+         hits[weeks==i] <- TRUE
+         star[weeks==i] <- "goldenrod4"
+         
+     if(tmp>1000){
+         star[weeks==i]<- "grey87"
+     }
+         
+     if(tmp>2000){
+         star[weeks==i] <- "gold2"
+     }
+     }
+ }
> 
>    
> png("./streakFig.png",width=900,height=600)
> 
> layout(matrix(1:60,nrow=6,ncol=10,byrow=TRUE))
> 
> 
> par(mar=c(0,0,1,0),xpd=FALSE)
> for(i in 1:60){
+ 
+     if(i%in%wks){
+ 
+         
+         plot(0,0,ylim=c(-1,1),xlim=c(-1,1),fg="white",xaxt="n",yaxt="n",
+              xlab="",ylab="",main=paste0("Week ",weeks[i]),col="white")
+ 
+         rect(par("usr")[1],par("usr")[3],par("usr")[2],par("usr")[4],
+              col=ifelse(weeks[i]==thisweek,"lightcyan","white"))
+         
+         if(hits[i]){
+ 
+             symbols(0,0,fg=ifelse(star[i]=="gold2","grey60","gold4"),bg=star[i]
+                    ,stars=rbind(rep(c(2,1,1),5)),add=TRUE,
+                     inches=.35)
+         } else {
+ 
+ 
+             points(0,0,col="red",pch=4,cex=5)
+ 
+         }
+     } else {
+ 
+              plot(0,0,ylim=c(-1,1),xlim=c(-1,1),fg="white",xaxt="n",yaxt="n",
+                   xlab="",ylab="",main="",col="white")
+ 
+ 
+     
+     if(i==55) {
+ 
+         par(xpd=NA)
+ 
+         legend("top",col=c("goldenrod4","grey87","gold2"),
+                     pch=16,legend=c("> 300 words","> 1000 words","> 2000 words")
+                    ,bty="n",cex=2.5) }
+ 
+     }
+ }
>         par(xpd=TRUE)
> 
> dev.off()
null device 
          1 
> 
> proc.time()
   user  system elapsed 
  0.248   0.046   0.348 
