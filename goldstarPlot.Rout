
R version 3.6.3 (2020-02-29) -- "Holding the Windsock"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]


   Welcome to R!

   Today is Mon Oct  5 17:30:39 2020 

   Please consider that, I am currently executing the following
%CPU   PID CPUID USER     COMMAND
 8.8 16974     5 mvisser  /usr/lib/libreoffice/program/soffice.bin --calc file:///home/mvisser/Dropbox/Backup/Work/git/ESWP/StreakWeeklyWords.csv --splash-pipe=5
 7.7  4263     2 mvisser  /usr/lib/firefox/firefox
64.6  5207     1 mvisser  /usr/lib/virtualbox/VirtualBox --comment Win10 --startvm 4a73ddf5-568d-469f-89d0-4cf18f4c41ec --no-startvm-errormsgbox
 5.3  3379     2 root     /usr/lib/xorg/Xorg vt2 -displayfd 3 -auth /run/user/1000/gdm/Xauthority -background none -noreset -keeptty -verbose 3
 4.8  4490     6 mvisser  /usr/lib/firefox/firefox -contentproc -childID 4 -isForBrowser -prefsLen 7758 -prefMapSize 234715 -parentBuildID 20200917005511 -appdir /usr/lib/firefox/browser 4263 true tab
 4.7  3637     3 mvisser  /usr/bin/pulseaudio --start --log-target=syslog
 3.5  4426     1 mvisser  /usr/lib/firefox/firefox -contentproc -childID 3 -isForBrowser -prefsLen 7664 -prefMapSize 234715 -parentBuildID 20200917005511 -appdir /usr/lib/firefox/browser 4263 true tab
31.7  9337     4 mvisser  /opt/zoom/zoom
 2.8 17017     5 mvisser  /usr/lib/gnome-terminal/gnome-terminal-server
 1.6 15393     0 mvisser  /usr/bin/python3 /usr/bin/blueman-manager
 1.1  4379     5 mvisser  /usr/lib/firefox/firefox -contentproc -childID 2 -isForBrowser -prefsLen 6838 -prefMapSize 234715 -parentBuildID 20200917005511 -appdir /usr/lib/firefox/browser 4263 true tab
 1.1  3571     0 mvisser  compton -b
 1.1 13626     0 mvisser  /usr/lib/firefox/firefox -contentproc -childID 53 -isForBrowser -prefsLen 11629 -prefMapSize 234715 -parentBuildID 20200917005511 -appdir /usr/lib/firefox/browser 4263 true tab
 1.0 10972     2 mvisser  /usr/lib/firefox/firefox -contentproc -childID 43 -isForBrowser -prefsLen 11765 -prefMapSize 234715 -parentBuildID 20200917005511 -appdir /usr/lib/firefox/browser 4263 true tab
 0.9  5185     4 mvisser  /usr/lib/virtualbox/VBoxSVC --auto-shutdown

 _________________________________________
/  SEMINAR ANNOUNCEMENT                   \
|                                         |
| Title: Are Frogs Turing Compatible?     |
| Speaker: Don "The Lion" Knuth           |
|                                         |
| ABSTRACT                                |
|                                         |
| Several researchers at the University   |
| of Louisiana have been studying the     |
| computing power of various amphibians,  |
| frogs in particular. The problem of     |
| frog computability has become a         |
| critical issue that ranges across all   |
| areas of computer science. It has been  |
| shown that anything computable by an    |
| amphi- bian community in a fixed-size   |
| pond is computable by a frog in the     |
| same-size pond -- that is to say, frogs |
| are Pond-space complete. We will show   |
| that there is a log-space, polywog-time |
| reduction from any Turing machine       |
| program to a frog. We will suggest      |
| these represent a proper subset of      |
| frog-computable functions.              |
|                                         |
| This is not just a                      |
| let's-see-how-far-those-frogs-can-jump  |
| seminar. This is only for hardcore      |
| amphibian-computation people and their  |
| colleagues.                             |
|                                         |
| Refreshments will be served. Music will |
\ be played.                              /
 -----------------------------------------
   \
    \
        .--.
       |o_o |
       |:_/ |
      //   \ \
     (|     | )
    /'\_   _/`\
    \___)=(___/

Loading required package: utils

   -- It is base to be outdone in kindness.
       (Unknown)
 

> ################################################################################
> ## Writing Streak
> ## Every week when you write
> ## > 300 words = bronze star (write an abstract)
> ## > 1000 words = silver star (write a paper section)
> ## > 2000 words = gold star (write more than one paper section)
> ################################################################################
> 
> setwd("~/Dropbox/Backup/Work/git/ESWP")
> 
> ## 52 weeks of the past year
> today <- format(Sys.time(), "%Y-%m-%d")
> thisweek <- as.numeric(format(Sys.time(), "%V"))
> 
> ## center weeks on this week
> wks <- seq(1,52) 
> weeks <- c(((wks[((thisweek+1):52)])),wks[-((thisweek+1):52)])
> 
> 
> ## a year back
> d <- as.POSIXlt(as.Date(today))
> d$year <- d$year-1
> d <- as.Date(d)
> 
> #layout.show(60)
> 
> ## get streak data
> stk <- read.csv("./StreakWeeklyWords.csv")
> stkDates <- as.Date(stk$Day,format="%d-%m-%Y")
> 
> stk <- stk[stkDates>d,]
> stkDates <- stkDates[stkDates>d]
> stkWeeks <- as.numeric(format(stkDates,format="%V"))
> 
> hits <- star <- numeric(52)
> 
> for(i in stkWeeks){
+     tmp <- sum(stk$words[stkWeeks==i])
+ 
+     if(tmp>300){
+         hits[weeks==i] <- TRUE
+         star[weeks==i] <- "goldenrod4"
+         
+     if(tmp>1000){
+         star[weeks==i]<- "grey87"
+     }
+         
+     if(tmp>2000){
+         star[weeks==i] <- "gold2"
+     }
+     }
+ }
> 
>    
> png("./streakFig.png",width=900,height=600)
> 
> layout(matrix(1:60,nrow=6,ncol=10,byrow=TRUE))
> 
> 
> par(mar=c(0,0,1,0),xpd=FALSE)
> for(i in 1:60){
+ 
+     if(i%in%wks){
+ 
+         
+         plot(0,0,ylim=c(-1,1),xlim=c(-1,1),fg="white",xaxt="n",yaxt="n",
+              xlab="",ylab="",main=paste0("Week ",weeks[i]),col="white")
+ 
+         rect(par("usr")[1],par("usr")[3],par("usr")[2],par("usr")[4],
+              col=ifelse(weeks[i]==thisweek,"lightcyan","white"))
+         
+         if(hits[i]){
+ 
+             symbols(0,0,fg=ifelse(star[i]=="gold2","grey60","gold4"),bg=star[i]
+                    ,stars=rbind(rep(c(2,1,1),5)),add=TRUE,
+                     inches=.35)
+         } else {
+ 
+ 
+             points(0,0,col="red",pch=4,cex=5)
+ 
+         }
+     } else {
+ 
+              plot(0,0,ylim=c(-1,1),xlim=c(-1,1),fg="white",xaxt="n",yaxt="n",
+                   xlab="",ylab="",main="",col="white")
+ 
+ 
+     
+     if(i==55) {
+ 
+         par(xpd=NA)
+ 
+         legend("top",col=c("goldenrod4","grey87","gold2"),
+                     pch=16,legend=c("> 300 words","> 1000 words","> 2000 words")
+                    ,bty="n",cex=2.5) }
+ 
+     }
+ }
>         par(xpd=TRUE)
> 
> dev.off()
null device 
          1 
> 
> proc.time()
   user  system elapsed 
  0.399   0.070   0.486 
